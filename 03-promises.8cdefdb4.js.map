{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YACVC,SAAS,EACTC,QAAS,MAGX,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,qBACnCC,UAAWF,SAASC,cAAc,oBAClCE,OAAQH,SAASC,cAAc,sBAC/BG,OAAQJ,SAASC,cAAc,SA+BjC,SAASI,EAAcV,EAAUW,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEhB,E,MAAUW,IAEpBM,EAAO,C,SAAEjB,E,MAAUW,GAAQ,GAE5BA,EAAM,G,CAXbR,EAAKM,OAAOU,iBAAiB,UA1BJC,IACvBA,EAAEC,iBAEF,MAAMb,EAASL,EAAKK,OAAOc,MACrBlB,EAAamB,OAAOpB,EAAKC,WAAWkB,OACpCf,EAAYgB,OAAOpB,EAAKI,UAAUe,OAExC,IAAIE,EAAW,EACXC,EAAQrB,EAAaG,EAEzB,IAAK,IAAImB,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChCF,GAAY,EACZC,GAASlB,EAETG,EAAcc,EAAUC,GACrBE,MAAK,EAAC3B,SAAEA,EAAQW,MAAEA,MACjBhB,EAAAE,OAAO+B,QAAQ,uBAAqB5B,QAAiBW,MAAU,IAEhEkB,OAAM,EAAC7B,SAAEA,EAAQW,MAAEA,MAClBhB,EAAAE,OAAOiC,QAAQ,sBAAoB9B,QAAeW,MAAU,IAIlER,EAAKM,OAAOsB,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '250px',\n  position: 'right-top',\n  useIcon: false,\n  timeout: 5000,\n});\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=delay]'),\n  delayStep: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submit: document.querySelector('form'),\n};\n\nconst submitBtnHandler = e => {\n  e.preventDefault();\n\n  const amount = refs.amount.value;\n  const firstDelay = Number(refs.firstDelay.value);\n  const delayStep = Number(refs.delayStep.value);\n\n  let position = 0;\n  let delay = firstDelay - delayStep;\n\n  for (let i = 1; i <= amount; i += 1) {\n    position += 1;\n    delay += delayStep;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  refs.submit.reset();\n};\n\nrefs.submit.addEventListener('submit', submitBtnHandler);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","width","position","useIcon","timeout","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","delayStep","amount","submit","$47d4ff9957288465$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","value","Number","position1","delay1","i","then","success","catch","failure","reset"],"version":3,"file":"03-promises.8cdefdb4.js.map"}